name: Ngrok + HAProxy Proxy Tunnel

on: [push]

jobs:
  proxy-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y haproxy jq curl python3

        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok -y
        ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Start HTTP server on port 8080
      run: |
        nohup python3 -m http.server 8080 > server.log 2>&1 &

    - name: Start Ngrok TCP tunnel
      run: |
        ngrok tcp 8080 > ngrok.log 2>&1 &
        sleep 6
        curl -s http://localhost:4040/api/tunnels > tunnels.json
        TUNNEL_URL=$(jq -r .tunnels[0].public_url < tunnels.json | sed 's/tcp:\/\///')
        HOST=$(echo $TUNNEL_URL | cut -d':' -f1)
        PORT=$(echo $TUNNEL_URL | cut -d':' -f2)
        echo "Ngrok Tunnel: $HOST:$PORT"
        echo "$HOST $PORT" > ngrok_target.txt

    - name: Configure HAProxy to tunnel to Ngrok
      run: |
        read HOST PORT < ngrok_target.txt
        sudo bash -c "cat > /etc/haproxy/haproxy.cfg" <<EOF
global
    daemon
    maxconn 256

defaults
    mode http
    timeout connect 5s
    timeout client  10s
    timeout server  10s

frontend proxy-in
    bind *:80
    default_backend tunnel

backend tunnel
    server ngrok_proxy $HOST:$PORT
EOF
        sudo systemctl restart haproxy

    - name: Test HTTP proxy via Ngrok/HAProxy
      run: |
        echo "Testing proxy through HAProxy → Ngrok → Python HTTP Server"
        curl -x http://localhost:80 http://localhost:8080 -m 10 -v || echo "Test failed"
        
