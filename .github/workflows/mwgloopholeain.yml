name: WireGuard with Ngrok TCP Tunnel

on: workflow_dispatch:

jobs: start-wireguard: runs-on: ubuntu-latest

steps:
  - name: Update & install dependencies
    run: |
      sudo apt update
      sudo apt install -y wireguard curl unzip

  - name: Generate WireGuard server keys
    run: |
      mkdir -p wg
      cd wg
      umask 077
      wg genkey | tee privatekey | wg pubkey > publickey

  - name: Create WireGuard config
    run: |
      PRIV_KEY=$(cat wg/privatekey)
      echo "[Interface]" > wg/wg0.conf
      echo "Address = 10.0.0.1/24" >> wg/wg0.conf
      echo "PrivateKey = $PRIV_KEY" >> wg/wg0.conf
      echo "ListenPort = 51820" >> wg/wg0.conf

  - name: Show server public key (for client)
    run: cat wg/publickey

  - name: Start WireGuard server
    run: sudo wg-quick up wg/wg0.conf

  - name: Download and install Ngrok
    run: |
      curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc > /dev/null
      echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
      sudo apt update && sudo apt install ngrok

  - name: Authenticate Ngrok
    run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

  - name: Start Ngrok TCP tunnel for WireGuard
    run: nohup ngrok tcp 51820 > ngrok.log &

  - name: Wait and show Ngrok public TCP address
    run: |
      sleep 10
      curl -s http://127.0.0.1:4040/api/tunnels > tunnels.json
      cat tunnels.json | grep -Po 'tcp://\K[^\"]+'

  - name: Keep Workflow Alive 24/7
    run: |
      while sleep 3600; do echo "ðŸ’¤ still alive..."; done

